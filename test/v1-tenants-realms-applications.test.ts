/**
 * File Generated by Sideko (sideko.dev)
 */
import Client from "@public/beyond_identity_api";
import * as types from "@public/beyond_identity_api/types";

// test client mehtods (keep comment for code generation)

describe("tests client.v1.tenants.realms.applications.create", () => {
  test.concurrent("200 generated_success_create_application", async () => {
    // Generated success test for Create Application body example from OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.applications.create({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      data: {
        application: {
          authenticator_config_id: "73731b7f-eb76-4143-9b4b-81a720385f5a",
          display_name: "Pet Application",
          id: "38833c36-6f47-4992-9329-ea0a00915137",
          is_managed: false,
          protocol_config: {
            allowed_scopes: ["pets:read"],
            client_id: "AYYNcuOSpfqIf33JeegCzDIT",
            client_secret: "wWD4mPzdsjms1LPekQSo0v9scOHLWy5wmMtKAR2JNhJPAKXv",
            confidentiality: types.ConfidentialityEnum.Confidential,
            grant_type: [types.GrantTypeItemEnum.AuthorizationCode],
            pkce: types.PkceConfigEnum.S256,
            redirect_uris: ["https://auth.mypetapp.com/callback"],
            token_configuration: {
              expires_after: 86400,
              subject_field: types.TokenConfigurationSubjectFieldEnum.Id,
              token_signing_algorithm:
                types.TokenConfigurationTokenSigningAlgorithmEnum.Rs256,
            },
            token_endpoint_auth_method:
              types.TokenEndpointAuthMethodEnum.ClientSecretBasic,
            token_format: types.Obj0TokenFormatEnum.SelfContained,
            type: types.Obj0TypeEnum.Oauth2,
          },
          realm_id: "caf2ff640497591a",
          resource_server_id: "84db69f5-48a8-4c11-8cda-1bae3a73f07e",
          tenant_id: "00011f1183c67b69",
        },
      },
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.applications.patch", () => {
  test.concurrent("200 generated_success_update_display_name", async () => {
    // Generated success test for Update Display Name body example from OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.applications.patch({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      applicationId: "38833c36-6f47-4992-9329-ea0a00915137",
      data: {
        application: {
          authenticator_config_id: "73731b7f-eb76-4143-9b4b-81a720385f5a",
          display_name: "Pet Application",
          id: "38833c36-6f47-4992-9329-ea0a00915137",
          is_managed: false,
          protocol_config: {
            allowed_scopes: ["pets:read"],
            client_id: "AYYNcuOSpfqIf33JeegCzDIT",
            client_secret: "wWD4mPzdsjms1LPekQSo0v9scOHLWy5wmMtKAR2JNhJPAKXv",
            confidentiality: types.ConfidentialityEnum.Confidential,
            grant_type: [types.GrantTypeItemEnum.AuthorizationCode],
            pkce: types.PkceConfigEnum.S256,
            redirect_uris: ["https://auth.mypetapp.com/callback"],
            token_configuration: {
              expires_after: 86400,
              subject_field: types.TokenConfigurationSubjectFieldEnum.Id,
              token_signing_algorithm:
                types.TokenConfigurationTokenSigningAlgorithmEnum.Rs256,
            },
            token_endpoint_auth_method:
              types.TokenEndpointAuthMethodEnum.ClientSecretBasic,
            token_format: types.Obj0TokenFormatEnum.SelfContained,
            type: types.Obj0TypeEnum.Oauth2,
          },
          realm_id: "caf2ff640497591a",
          resource_server_id: "84db69f5-48a8-4c11-8cda-1bae3a73f07e",
          tenant_id: "00011f1183c67b69",
        },
      },
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.applications.get", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.applications.get({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      applicationId: "38833c36-6f47-4992-9329-ea0a00915137",
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.applications.list", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.applications.list({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      pageSize: 123,
      pageToken: "string",
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.applications.delete", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.applications.delete({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      applicationId: "38833c36-6f47-4992-9329-ea0a00915137",
    });
    console.log(response);
  });
});
