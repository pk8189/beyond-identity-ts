/**
 * File Generated by Sideko (sideko.dev)
 */
import Client from "@public/beyond_identity_api";

// test client mehtods (keep comment for code generation)

describe("tests client.v1.tenants.realms.identities.create", () => {
  test.concurrent("200 generated_success_create_identity", async () => {
    // Generated success test for Create Identity body example from OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.identities.create({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      data: {
        identity: {
          create_time: "2022-04-12T05:53:07.119Z",
          display_name: "Test Identity",
          id: "e372db224c06e850",
          realm_id: "8f5bec58229e6f29",
          status: "active",
          tenant_id: "0001f1f460b1ace6",
          traits: {
            external_id: "string",
            family_name: "string",
            given_name: "string",
            primary_email_address: "test@example.com",
            type: "traits_v0",
            username: "test",
          },
          update_time: "2022-06-16T14:31:03.770Z",
        },
      },
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.identities.patch", () => {
  test.concurrent(
    "200 generated_success_update_display_name_and_email",
    async () => {
      // Generated success test for Update Display Name and Email body example from OpenAPI
      const client = new Client({
        token: "API_TOKEN",
        baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
      });
      const response = await client.v1.tenants.realms.identities.patch({
        tenantId: "000176d94fd7b4d1",
        realmId: "19a95130480dfa79",
        identityId: "e372db224c06e850",
        data: {
          identity: {
            create_time: "2022-04-12T05:53:07.119Z",
            display_name: "Test Identity",
            id: "e372db224c06e850",
            realm_id: "8f5bec58229e6f29",
            status: "active",
            tenant_id: "0001f1f460b1ace6",
            traits: {
              external_id: "string",
              family_name: "string",
              given_name: "string",
              primary_email_address: "test@example.com",
              type: "traits_v0",
              username: "test",
            },
            update_time: "2022-06-16T14:31:03.770Z",
          },
        },
      });
      console.log(response);
    },
  );
});

describe("tests client.v1.tenants.realms.identities.get", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.identities.get({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      identityId: "e372db224c06e850",
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.identities.list", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.identities.list({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      filter: "string",
      pageSize: 123,
      pageToken: "string",
      skip: 123,
    });
    console.log(response);
  });
});

describe("tests client.v1.tenants.realms.identities.delete", () => {
  test.concurrent("200 generated_success", async () => {
    // Generated success test based on examples in OpenAPI
    const client = new Client({
      token: "API_TOKEN",
      baseUrl: "https://api.sideko.dev/v1/mock/public/beyond-identity/1.7.0",
    });
    const response = await client.v1.tenants.realms.identities.delete({
      tenantId: "000176d94fd7b4d1",
      realmId: "19a95130480dfa79",
      identityId: "e372db224c06e850",
    });
    console.log(response);
  });
});
