/**
 * File Generated by Sideko (sideko.dev)
 */
import {
  CoreResourceClient,
  CoreClient,
  RequestOptions,
  ApiPromise,
} from "@public/beyond_identity_api/core";
import { RealmsClient } from "@public/beyond_identity_api/resources/v1/tenants/realms";
import * as requests from "@public/beyond_identity_api/resources/v1/tenants/request-types";
import * as types from "@public/beyond_identity_api/types";

export class TenantsClient extends CoreResourceClient {
  // register resources (keep comment for code generation)
  realms: RealmsClient;

  constructor(client: CoreClient) {
    super(client);

    // init resources (keep comment for code generation)
    this.realms = new RealmsClient(this._client);
  }

  // register api methods (keep comment for code generation)

  /**
   * To update only specific attributes of an existing tenant, send a PATCH request to `/v1/tenants/$TENANT_ID`. Values in the request body for immutable or read-only fields will be ignored. Fields that are omitted from the request body will be left unchanged.
   *
   */
  patch(
    request: requests.PatchRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.Tenant> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "patch",
      path: `/v1/tenants/${request.tenantId}`,
      auth: ["BearerAuth"],
      contentType: "application/json",
      body: request.data,
      responseType: "json",
      opts,
    });
  }

  /**
   * To retrieve an existing tenant, send a GET request to `/v1/tenants/$TENANT_ID`.
   *
   */
  get(
    request: requests.GetRequest,
    opts?: RequestOptions,
  ): ApiPromise<types.Tenant> {
    // send request (keep comment for code generation)
    return this._client.makeRequest({
      method: "get",
      path: `/v1/tenants/${request.tenantId}`,
      auth: ["BearerAuth"],
      responseType: "json",
      opts,
    });
  }
}
